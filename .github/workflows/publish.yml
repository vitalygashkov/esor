name: Publish

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          check-latest: true

      - name: Install dependencies
        run: npm ci

      - name: Get name and version from package.json
        run: |
          test -n $(node -p -e "require('./package.json').name") &&
          test -n $(node -p -e "require('./package.json').version") &&
          echo PACKAGE_NAME=$(node -p -e "require('./package.json').name") >> $GITHUB_ENV &&
          echo PACKAGE_VERSION=$(node -p -e "require('./package.json').version") >> $GITHUB_ENV || exit 1

      - name: Build
        run: npm run build

      - name: Compress
        run: |
          zip -9 -j ${{ env.PACKAGE_NAME }}-linux-x64.zip ./build/linux/${{ env.PACKAGE_NAME }}
          zip -9 -j ${{ env.PACKAGE_NAME }}-mac-x64.zip ./build/mac/${{ env.PACKAGE_NAME }}
          zip -9 -j ${{ env.PACKAGE_NAME }}-win-x64.zip ./build/win/${{ env.PACKAGE_NAME }}.exe

      - name: Upload Linux build
        uses: actions/upload-artifact@v4
        with:
          name: linux
          path: ./${{ env.PACKAGE_NAME }}-linux-x64.zip

      - name: Upload macOS build
        uses: actions/upload-artifact@v4
        with:
          name: mac
          path: ./${{ env.PACKAGE_NAME }}-mac-x64.zip

      - name: Upload Windows build
        uses: actions/upload-artifact@v4
        with:
          name: win
          path: ./${{ env.PACKAGE_NAME }}-win-x64.zip

  upload:
    name: Upload builds to Release
    runs-on: ubuntu-latest
    needs: [build]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          check-latest: true
          cache: 'npm'

      - name: Download Linux build
        uses: actions/download-artifact@v4
        with:
          name: linux

      - name: Download macOS build artifact
        uses: actions/download-artifact@v4
        with:
          name: mac

      - name: Download Windows build
        uses: actions/download-artifact@v4
        with:
          name: win

      - name: Get package name and version
        run: |
          test -n $(node -p -e "require('./package.json').name") &&
          test -n $(node -p -e "require('./package.json').version") &&
          echo PACKAGE_NAME=$(node -p -e "require('./package.json').name") >> $GITHUB_ENV &&
          echo PACKAGE_VERSION=$(node -p -e "require('./package.json').version") >> $GITHUB_ENV || exit 1

      - name: Create release
        uses: ncipollo/release-action@v1
        with:
          artifacts: '${{ env.PACKAGE_NAME }}-win-x64.zip,
            ${{ env.PACKAGE_NAME }}-mac-x64.zip,
            ${{ env.PACKAGE_NAME }}-linux-x64.zip'
          tag: 'v${{ env.PACKAGE_VERSION }}'
          draft: true
